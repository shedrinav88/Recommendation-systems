# -*- coding: utf-8 -*-
"""metrics.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xo3E3vJ2X7Ayggqn8GJ7CbWJ6a4Ybbmg
"""

import numpy as np
import pandas as pd


def hit_rate_at_k(recommended_list, bought_list, k=5):
    
    bought_list = np.array(bought_list)
    recommended_list = np.array(recommended_list[:k])
    
    flags = np.isin(bought_list, recommended_list)
    
    hit_rate = (flags.sum() > 0) * 1
    
    return hit_rate


def money_precision_at_k(recommended_list, bought_list,
                         prices_recommended, k=5):
        
    bought_list = np.array(bought_list)
    recommended_list = np.array(recommended_list[:k])

    prices_recommended = np.array(prices_recommended)
    
    flags = np.isin(recommended_list, bought_list)
    
    precision = (flags[:k]*prices_recommended[:k]).sum() / prices_recommended[:k].sum()

    return precision


def recall_at_k(recommended_list, bought_list, k=5):
    
    bought_list = np.array(bought_list)
    recommended_list = np.array(recommended_list[:k])
    
    flags = np.isin(bought_list, recommended_list)
    
    recall = flags.sum() / len(bought_list)
    
    return recall


def money_recall_at_k(recommended_list, bought_list, prices_recommended, prices_bought, k=5):
    
    bought_list = np.array(bought_list)
    recommended_list = np.array(recommended_list[:k])

    prices_recommended = np.array(prices_recommended)
    prices_bought = np.array(prices_bought)
    
    flags = np.isin(recommended_list, bought_list)
    
    recall = (flags[:k]*prices_recommended[:k]).sum() / prices_bought.sum()
    return recall


def precision_at_k(recommended_list, bought_list, k=5):
    
    bought_list = np.array(bought_list)
    recommended_list = np.array(recommended_list)
    
    bought_list = bought_list  # Тут нет [:k] !!
    recommended_list = recommended_list[:k]
    
    flags = np.isin(bought_list, recommended_list)
    precision = flags.sum() / len(recommended_list)
    
    
    return precision

